{"version":3,"sources":["../node_modules/semantic-ui-react/dist/es/collections/Message/MessageContent.js","../node_modules/semantic-ui-react/dist/es/collections/Message/MessageHeader.js","../node_modules/semantic-ui-react/dist/es/collections/Message/MessageItem.js","../node_modules/semantic-ui-react/dist/es/collections/Message/MessageList.js","../node_modules/semantic-ui-react/dist/es/collections/Message/Message.js","components/Auth/Login.js"],"names":["MessageContent","props","children","className","content","classes","cx","rest","getUnhandledProps","ElementType","getElementType","React","createElement","_extends","childrenUtils","isNil","handledProps","propTypes","MessageHeader","create","createShorthandFactory","val","MessageItem","defaultProps","as","MessageList","items","_map","Message","_Component","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","concat","_defineProperty","_assertThisInitialized","e","onDismiss","_inherits","_createClass","key","value","_this$props","attached","color","compact","error","floating","header","hidden","icon","info","list","negative","positive","size","success","visible","warning","useKeyOnly","useKeyOrValueAndKey","dismissIcon","Icon","name","onClick","handleDismiss","autoGenerateKey","_isNil","createHTMLParagraph","Component","Login","state","email","password","errors","loading","displayErrors","map","i","message","handleChange","event","setState","target","handleSubmit","preventDefault","isFormValid","firebase","auth","signInWithEmailAndPassword","then","signedInuser","console","log","catch","err","handleInputErrpr","inputName","some","toLowerCase","includes","textAlign","verticalAlign","Column","style","maxWidth","onSubmit","stacked","Input","fluid","iconPosition","placeholder","onChange","type","disabled","to"],"mappings":"8ZASA,SAASA,EAAeC,GACtB,IAAIC,EAAWD,EAAMC,SACjBC,EAAYF,EAAME,UAClBC,EAAUH,EAAMG,QAChBC,EAAUC,IAAG,UAAWH,GACxBI,EAAOC,YAAkBR,EAAgBC,GACzCQ,EAAcC,YAAeV,EAAgBC,GACjD,OAAOU,IAAMC,cAAcH,EAAaI,IAAS,GAAIN,EAAM,CACzDJ,UAAWE,IACTS,IAAcC,MAAMb,GAAYE,EAAUF,GAGhDF,EAAegB,aAAe,CAAC,KAAM,WAAY,YAAa,WAC9DhB,EAAeiB,UAYX,GACWjB,QC1Bf,SAASkB,EAAcjB,GACrB,IAAIC,EAAWD,EAAMC,SACjBC,EAAYF,EAAME,UAClBC,EAAUH,EAAMG,QAChBC,EAAUC,IAAG,SAAUH,GACvBI,EAAOC,YAAkBU,EAAejB,GACxCQ,EAAcC,YAAeQ,EAAejB,GAChD,OAAOU,IAAMC,cAAcH,EAAaI,IAAS,GAAIN,EAAM,CACzDJ,UAAWE,IACTS,IAAcC,MAAMb,GAAYE,EAAUF,GAGhDgB,EAAcF,aAAe,CAAC,KAAM,WAAY,YAAa,WAC7DE,EAAcD,UAYV,GACJC,EAAcC,OAASC,YAAuBF,GAAe,SAAUG,GACrE,MAAO,CACLjB,QAASiB,MAGEH,Q,kBC/Bf,SAASI,EAAYrB,GACnB,IAAIC,EAAWD,EAAMC,SACjBC,EAAYF,EAAME,UAClBC,EAAUH,EAAMG,QAChBC,EAAUC,IAAG,UAAWH,GACxBI,EAAOC,YAAkBc,EAAarB,GACtCQ,EAAcC,YAAeY,EAAarB,GAC9C,OAAOU,IAAMC,cAAcH,EAAaI,IAAS,GAAIN,EAAM,CACzDJ,UAAWE,IACTS,IAAcC,MAAMb,GAAYE,EAAUF,GAGhDoB,EAAYN,aAAe,CAAC,KAAM,WAAY,YAAa,WAC3DM,EAAYL,UAYR,GACJK,EAAYC,aAAe,CACzBC,GAAI,MAENF,EAAYH,OAASC,YAAuBE,GAAa,SAAUlB,GACjE,MAAO,CACLA,QAASA,MAGEkB,QChCf,SAASG,EAAYxB,GACnB,IAAIC,EAAWD,EAAMC,SACjBC,EAAYF,EAAME,UAClBuB,EAAQzB,EAAMyB,MACdrB,EAAUC,IAAG,OAAQH,GACrBI,EAAOC,YAAkBiB,EAAaxB,GACtCQ,EAAcC,YAAee,EAAaxB,GAC9C,OAAOU,IAAMC,cAAcH,EAAaI,IAAS,GAAIN,EAAM,CACzDJ,UAAWE,IACTS,IAAcC,MAAMb,GAAYyB,IAAKD,EAAOJ,EAAYH,QAAUjB,GAGxEuB,EAAYT,aAAe,CAAC,KAAM,WAAY,YAAa,SAC3DS,EAAYR,UAYR,GACJQ,EAAYF,aAAe,CACzBC,GAAI,MAENC,EAAYN,OAASC,YAAuBK,GAAa,SAAUJ,GACjE,MAAO,CACLK,MAAOL,MAGII,QCrBXG,EAEJ,SAAUC,GAGR,SAASD,IACP,IAAIE,EAEAC,EAEJC,IAAgBC,KAAML,GAEtB,IAAK,IAAIM,EAAOC,UAAUC,OAAQC,EAAO,IAAIC,MAAMJ,GAAOK,EAAO,EAAGA,EAAOL,EAAMK,IAC/EF,EAAKE,GAAQJ,UAAUI,GAUzB,OAPAR,EAAQS,IAA2BP,MAAOH,EAAmBW,IAAgBb,IAAUc,KAAKC,MAAMb,EAAkB,CAACG,MAAMW,OAAOP,KAElIQ,IAAgBC,IAAuBA,IAAuBf,IAAS,iBAAiB,SAAUgB,GAChG,IAAIC,EAAYjB,EAAM9B,MAAM+C,UACxBA,GAAWA,EAAUD,EAAGhB,EAAM9B,UAG7B8B,EAuDT,OA3EAkB,IAAUrB,EAASC,GAuBnBqB,IAAatB,EAAS,CAAC,CACrBuB,IAAK,SACLC,MAAO,WACL,IAAIC,EAAcpB,KAAKhC,MACnBqD,EAAWD,EAAYC,SACvBpD,EAAWmD,EAAYnD,SACvBC,EAAYkD,EAAYlD,UACxBoD,EAAQF,EAAYE,MACpBC,EAAUH,EAAYG,QACtBpD,EAAUiD,EAAYjD,QACtBqD,EAAQJ,EAAYI,MACpBC,EAAWL,EAAYK,SACvBC,EAASN,EAAYM,OACrBC,EAASP,EAAYO,OACrBC,EAAOR,EAAYQ,KACnBC,EAAOT,EAAYS,KACnBC,EAAOV,EAAYU,KACnBC,EAAWX,EAAYW,SACvBhB,EAAYK,EAAYL,UACxBiB,EAAWZ,EAAYY,SACvBC,EAAOb,EAAYa,KACnBC,EAAUd,EAAYc,QACtBC,EAAUf,EAAYe,QACtBC,EAAUhB,EAAYgB,QACtBhE,EAAUC,IAAG,KAAMiD,EAAOW,EAAMI,YAAWd,EAAS,WAAYc,YAAWb,EAAO,SAAUa,YAAWZ,EAAU,YAAaY,YAAWV,EAAQ,UAAWU,YAAWT,EAAM,QAASS,YAAWR,EAAM,QAASQ,YAAWN,EAAU,YAAaM,YAAWL,EAAU,YAAaK,YAAWH,EAAS,WAAYG,YAAWF,EAAS,WAAYE,YAAWD,EAAS,WAAYE,YAAoBjB,EAAU,YAAa,UAAWnD,GAC1aqE,EAAcxB,GAAarC,IAAMC,cAAc6D,IAAM,CACvDC,KAAM,QACNC,QAAS1C,KAAK2C,gBAEZrE,EAAOC,YAAkBoB,EAASK,KAAKhC,OACvCQ,EAAcC,YAAekB,EAASK,KAAKhC,OAE/C,OAAKa,IAAcC,MAAMb,GAMlBS,IAAMC,cAAcH,EAAaI,IAAS,GAAIN,EAAM,CACzDJ,UAAWE,IACTmE,EAAaC,IAAKtD,OAAO0C,EAAM,CACjCgB,iBAAiB,MACbC,IAAOnB,KAAYmB,IAAO1E,KAAa0E,IAAOf,KAAUpD,IAAMC,cAAcZ,EAAgB,KAAMkB,EAAcC,OAAOwC,EAAQ,CACnIkB,iBAAiB,IACfpD,EAAYN,OAAO4C,EAAM,CAC3Bc,iBAAiB,IACfE,YAAoB3E,EAAS,CAC/ByE,iBAAiB,MAdVlE,IAAMC,cAAcH,EAAaI,IAAS,GAAIN,EAAM,CACzDJ,UAAWE,IACTmE,EAAatE,OAiBhB0B,EA5ET,CA6EEoD,aAEFnC,IAAgBjB,EAAS,UAAW5B,GAEpC6C,IAAgBjB,EAAS,SAAUV,GAEnC2B,IAAgBjB,EAAS,OAAQH,GAEjCoB,IAAgBjB,EAAS,OAAQN,GAEjCuB,IAAgBjB,EAAS,eAAgB,CAAC,KAAM,WAAY,WAAY,YAAa,QAAS,UAAW,UAAW,QAAS,WAAY,SAAU,SAAU,OAAQ,OAAQ,OAAQ,WAAY,YAAa,WAAY,OAAQ,UAAW,UAAW,YAGxPA,EAAQX,UAqEJ,I,6LCjLEgE,E,4MACJC,MAAQ,CACNC,MAAO,GACPC,SAAU,GACVC,OAAQ,GACRC,SAAS,G,EAGXC,cAAgB,SAAAF,GAAM,OAAIA,EAAOG,KAAI,SAAC/B,EAAOgC,GAAR,OAAc,4BAAYhC,EAAMiC,SAAVD,O,EAE3DE,aAAe,SAACC,GACd,EAAKC,SAAL,eACGD,EAAME,OAAOpB,KAAOkB,EAAME,OAAO1C,S,EAItC2C,aAAe,SAACH,GACdA,EAAMI,iBACF,EAAKC,YAAY,EAAKf,SACxB,EAAKW,SAAS,CAAER,OAAQ,GAAIC,SAAS,IAErCY,IACGC,OACAC,2BAA2B,EAAKlB,MAAMC,MAAO,EAAKD,MAAME,UACxDiB,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZ,EAAKT,SAAS,CAAEP,SAAS,OAE1BmB,OAAM,SAAAC,GACL,EAAKb,SAAS,CAAER,OAAQ,EAAKH,MAAMG,OAAOzC,OAAO8D,GAAMpB,SAAS,S,EAKxEW,YAAc,gBAAGd,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OAAyBD,GAASC,G,EAEhDuB,iBAAmB,SAACtB,EAAQuB,GAC1B,OAAOvB,EAAOwB,MAAK,SAAApD,GAAK,OAAIA,EAAMiC,QAAQoB,cAAcC,SAAS,YAAY,QAAU,I,4CAIzF,WACE,MAA6C9E,KAAKiD,MAA1CC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,OAAQC,EAAjC,EAAiCA,QAEjC,OACE,cAAC,IAAD,CAAM0B,UAAU,SAASC,cAAc,SAAS9G,UAAU,MAA1D,SACE,eAAC,IAAK+G,OAAN,CAAaC,MAAO,CAAEC,SAAU,KAAhC,UACE,eAAC,IAAD,CAAQ5F,GAAG,KAAKqC,MAAI,EAACN,MAAM,OAAOyD,UAAU,SAA5C,UACE,cAAC,IAAD,CAAMtC,KAAK,cAAcnB,MAAM,SADjC,0BAKA,cAAC,IAAD,CAAM8D,SAAUpF,KAAK8D,aAAc7B,KAAK,QAAxC,SACE,eAAC,IAAD,CAASoD,SAAO,EAAhB,UACE,cAAC,IAAKC,MAAN,CAAYC,OAAK,EAACrH,UAAW8B,KAAK0E,iBAAiBtB,EAAQ,SAAUX,KAAK,QAAQb,KAAK,OAAO4D,aAAa,OAAOC,YAAY,QAAQC,SAAU1F,KAAK0D,aAAciC,KAAK,QAAQxE,MAAO+B,IACvL,cAAC,IAAKoC,MAAN,CAAYC,OAAK,EAACrH,UAAW8B,KAAK0E,iBAAiBtB,EAAQ,YAAaX,KAAK,WAAWb,KAAK,OAAO4D,aAAa,OAAOC,YAAY,WAAWC,SAAU1F,KAAK0D,aAAciC,KAAK,WAAWxE,MAAOgC,IAEnM,cAAC,IAAD,CAAQyC,SAAUvC,EAASnF,UAAWmF,EAAU,UAAY,GAAI/B,MAAM,OAAOiE,OAAK,EAACtD,KAAK,QAAxF,yBAGHmB,EAAOjD,OAAS,GACf,eAAC,IAAD,CAASqB,OAAK,EAAd,UACE,uCACCxB,KAAKsD,cAAcF,MAGxB,eAAC,IAAD,mCAA8B,cAAC,IAAD,CAAMyC,GAAG,YAAT,kC,GAlEpBnH,IAAMqE,WA0EXC","file":"static/js/7.af380f54.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A message can contain a content.\n */\n\nfunction MessageContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('content', className);\n  var rest = getUnhandledProps(MessageContent, props);\n  var ElementType = getElementType(MessageContent, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nMessageContent.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nMessageContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default MessageContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A message can contain a header.\n */\n\nfunction MessageHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('header', className);\n  var rest = getUnhandledProps(MessageHeader, props);\n  var ElementType = getElementType(MessageHeader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nMessageHeader.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nMessageHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nMessageHeader.create = createShorthandFactory(MessageHeader, function (val) {\n  return {\n    content: val\n  };\n});\nexport default MessageHeader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A message list can contain an item.\n */\n\nfunction MessageItem(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('content', className);\n  var rest = getUnhandledProps(MessageItem, props);\n  var ElementType = getElementType(MessageItem, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nMessageItem.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nMessageItem.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nMessageItem.defaultProps = {\n  as: 'li'\n};\nMessageItem.create = createShorthandFactory(MessageItem, function (content) {\n  return {\n    content: content\n  };\n});\nexport default MessageItem;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _map from \"lodash/map\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport MessageItem from './MessageItem';\n/**\n * A message can contain a list of items.\n */\n\nfunction MessageList(props) {\n  var children = props.children,\n      className = props.className,\n      items = props.items;\n  var classes = cx('list', className);\n  var rest = getUnhandledProps(MessageList, props);\n  var ElementType = getElementType(MessageList, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? _map(items, MessageItem.create) : children);\n}\n\nMessageList.handledProps = [\"as\", \"children\", \"className\", \"items\"];\nMessageList.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand Message.Items. */\n  items: customPropTypes.collectionShorthand\n} : {};\nMessageList.defaultProps = {\n  as: 'ul'\n};\nMessageList.create = createShorthandFactory(MessageList, function (val) {\n  return {\n    items: val\n  };\n});\nexport default MessageList;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _isNil from \"lodash/isNil\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, createHTMLParagraph, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey } from '../../lib';\nimport Icon from '../../elements/Icon';\nimport MessageContent from './MessageContent';\nimport MessageHeader from './MessageHeader';\nimport MessageList from './MessageList';\nimport MessageItem from './MessageItem';\n/**\n * A message displays information that explains nearby content.\n * @see Form\n */\n\nvar Message =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Message, _Component);\n\n  function Message() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Message);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Message)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleDismiss\", function (e) {\n      var onDismiss = _this.props.onDismiss;\n      if (onDismiss) onDismiss(e, _this.props);\n    });\n\n    return _this;\n  }\n\n  _createClass(Message, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          attached = _this$props.attached,\n          children = _this$props.children,\n          className = _this$props.className,\n          color = _this$props.color,\n          compact = _this$props.compact,\n          content = _this$props.content,\n          error = _this$props.error,\n          floating = _this$props.floating,\n          header = _this$props.header,\n          hidden = _this$props.hidden,\n          icon = _this$props.icon,\n          info = _this$props.info,\n          list = _this$props.list,\n          negative = _this$props.negative,\n          onDismiss = _this$props.onDismiss,\n          positive = _this$props.positive,\n          size = _this$props.size,\n          success = _this$props.success,\n          visible = _this$props.visible,\n          warning = _this$props.warning;\n      var classes = cx('ui', color, size, useKeyOnly(compact, 'compact'), useKeyOnly(error, 'error'), useKeyOnly(floating, 'floating'), useKeyOnly(hidden, 'hidden'), useKeyOnly(icon, 'icon'), useKeyOnly(info, 'info'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(success, 'success'), useKeyOnly(visible, 'visible'), useKeyOnly(warning, 'warning'), useKeyOrValueAndKey(attached, 'attached'), 'message', className);\n      var dismissIcon = onDismiss && React.createElement(Icon, {\n        name: \"close\",\n        onClick: this.handleDismiss\n      });\n      var rest = getUnhandledProps(Message, this.props);\n      var ElementType = getElementType(Message, this.props);\n\n      if (!childrenUtils.isNil(children)) {\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes\n        }), dismissIcon, children);\n      }\n\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes\n      }), dismissIcon, Icon.create(icon, {\n        autoGenerateKey: false\n      }), (!_isNil(header) || !_isNil(content) || !_isNil(list)) && React.createElement(MessageContent, null, MessageHeader.create(header, {\n        autoGenerateKey: false\n      }), MessageList.create(list, {\n        autoGenerateKey: false\n      }), createHTMLParagraph(content, {\n        autoGenerateKey: false\n      })));\n    }\n  }]);\n\n  return Message;\n}(Component);\n\n_defineProperty(Message, \"Content\", MessageContent);\n\n_defineProperty(Message, \"Header\", MessageHeader);\n\n_defineProperty(Message, \"List\", MessageList);\n\n_defineProperty(Message, \"Item\", MessageItem);\n\n_defineProperty(Message, \"handledProps\", [\"as\", \"attached\", \"children\", \"className\", \"color\", \"compact\", \"content\", \"error\", \"floating\", \"header\", \"hidden\", \"icon\", \"info\", \"list\", \"negative\", \"onDismiss\", \"positive\", \"size\", \"success\", \"visible\", \"warning\"]);\n\nexport { Message as default };\nMessage.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A message can be formatted to attach itself to other content. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['bottom', 'top'])]),\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A message can be formatted to be different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A message can only take up the width of its content. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A message may be formatted to display a negative message. Same as `negative`. */\n  error: PropTypes.bool,\n\n  /** A message can float above content that it is related to. */\n  floating: PropTypes.bool,\n\n  /** Shorthand for MessageHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** A message can be hidden. */\n  hidden: PropTypes.bool,\n\n  /** A message can contain an icon. */\n  icon: PropTypes.oneOfType([customPropTypes.itemShorthand, PropTypes.bool]),\n\n  /** A message may be formatted to display information. */\n  info: PropTypes.bool,\n\n  /** Array shorthand items for the MessageList. Mutually exclusive with children. */\n  list: customPropTypes.collectionShorthand,\n\n  /** A message may be formatted to display a negative message. Same as `error`. */\n  negative: PropTypes.bool,\n\n  /**\n   * A message that the user can choose to hide.\n   * Called when the user clicks the \"x\" icon. This also adds the \"x\" icon.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onDismiss: PropTypes.func,\n\n  /** A message may be formatted to display a positive message.  Same as `success`. */\n  positive: PropTypes.bool,\n\n  /** A message can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** A message may be formatted to display a positive message.  Same as `positive`. */\n  success: PropTypes.bool,\n\n  /** A message can be set to visible to force itself to be shown. */\n  visible: PropTypes.bool,\n\n  /** A message may be formatted to display warning messages. */\n  warning: PropTypes.bool\n} : {};","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport firebase from \"../../firebase\";\n\nimport {\n  Grid, Segment, Button, Header, Message, Icon, Form\n} from 'semantic-ui-react';\n\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    errors: [],\n    loading: false\n  };\n\n  displayErrors = errors => errors.map((error, i) => <p key={i}>{error.message}</p>);\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (this.isFormValid(this.state)) {\n      this.setState({ errors: [], loading: true });\n\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(this.state.email, this.state.password)\n        .then(signedInuser => {\n          console.log(signedInuser);\n          this.setState({ loading: false });\n        })\n        .catch(err => {\n          this.setState({ errors: this.state.errors.concat(err), loading: false });\n        });\n    }\n  }\n\n  isFormValid = ({ email, password }) => email && password;\n\n  handleInputErrpr = (errors, inputName) => {\n    return errors.some(error => error.message.toLowerCase().includes('email')) ? 'error' : '';\n  }\n\n  // Available colors = \"red\",\"orange\",\"yellow\",\"olive\",\"green\",\"teal\",\"blue\",\"violet\",\"purple\",\"pink\",\"brown\",\"grey\",\"black\"\n  render() {\n    const { email, password, errors, loading } = this.state;\n\n    return (\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h2\" icon color=\"teal\" textAlign=\"center\">\n            <Icon name=\"user secret\" color=\"teal\"></Icon>\n            Login Secret Society\n          </Header>\n\n          <Form onSubmit={this.handleSubmit} size=\"large\">\n            <Segment stacked>\n              <Form.Input fluid className={this.handleInputErrpr(errors, 'email')} name=\"email\" icon=\"mail\" iconPosition=\"left\" placeholder=\"Email\" onChange={this.handleChange} type=\"email\" value={email} />\n              <Form.Input fluid className={this.handleInputErrpr(errors, 'password')} name=\"password\" icon=\"lock\" iconPosition=\"left\" placeholder=\"Password\" onChange={this.handleChange} type=\"password\" value={password} />\n\n              <Button disabled={loading} className={loading ? 'loading' : ''} color=\"teal\" fluid size=\"large\">Submit</Button>\n            </Segment>\n          </Form>\n          {errors.length > 0 && (\n            <Message error>\n              <h3>Error</h3>\n              {this.displayErrors(errors)}\n            </Message>\n          )}\n          <Message>Don't have a account?<Link to=\"/register\">Register</Link></Message>\n        </Grid.Column>\n      </Grid>\n    );\n  };\n\n}\n\nexport default Login;\n"],"sourceRoot":""}