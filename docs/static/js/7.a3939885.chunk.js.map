{"version":3,"sources":["components/Auth/SocialLogin.js","../node_modules/semantic-ui-react/dist/es/collections/Message/MessageContent.js","../node_modules/semantic-ui-react/dist/es/collections/Message/MessageHeader.js","../node_modules/semantic-ui-react/dist/es/collections/Message/MessageItem.js","../node_modules/semantic-ui-react/dist/es/collections/Message/MessageList.js","../node_modules/semantic-ui-react/dist/es/collections/Message/Message.js","components/Auth/Login.js"],"names":["SocialLogin","state","loading","errors","usersRef","firebase","database","ref","handleFacebookLogin","setState","auth","signInWithPopup","FacebookAuthProvider","then","createdUser","saveUser","cacheUserData","catch","err","concat","handleGoogleLogin","GoogleAuthProvider","child","user","uid","set","name","displayName","avatar","photoURL","userList","once","data","users","val","Object","keys","forEach","id","push","userId","userData","props","this","Fragment","disabled","icon","fluid","color","style","marginBottom","content","onClick","React","Component","connect","MessageContent","children","className","classes","cx","rest","getUnhandledProps","ElementType","getElementType","createElement","_extends","childrenUtils","isNil","handledProps","propTypes","MessageHeader","create","createShorthandFactory","MessageItem","defaultProps","as","MessageList","items","_map","Message","_Component","_getPrototypeOf2","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","_defineProperty","_assertThisInitialized","e","onDismiss","_inherits","_createClass","key","value","_this$props","attached","compact","error","floating","header","hidden","info","list","negative","positive","size","success","visible","warning","useKeyOnly","useKeyOrValueAndKey","dismissIcon","Icon","handleDismiss","autoGenerateKey","_isNil","createHTMLParagraph","Login","email","password","displayErrors","map","i","message","handleChange","event","target","handleSubmit","preventDefault","isFormValid","signInWithEmailAndPassword","signedInuser","handleInputErrpr","inputName","some","toLowerCase","includes","textAlign","verticalAlign","Column","maxWidth","onSubmit","stacked","Input","iconPosition","placeholder","onChange","type","horizontal","to"],"mappings":"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","file":"static/js/7.a3939885.chunk.js","sourcesContent":["import React from \"react\";\r\nimport firebase from \"./../../firebase\";\r\nimport { Button } from 'semantic-ui-react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { cacheUserData } from \"./../../actions\";\r\n\r\n\r\nclass SocialLogin extends React.Component {\r\n    state = {\r\n        loading: false,\r\n        errors: [],\r\n        usersRef: firebase.database().ref('users')\r\n    }\r\n\r\n    handleFacebookLogin = () => {\r\n        this.setState({ errors: [], loading: true });\r\n\r\n        firebase\r\n            .auth()\r\n            .signInWithPopup(new firebase.auth.FacebookAuthProvider())\r\n            .then((createdUser) => {\r\n                this.saveUser(createdUser).then(() => {\r\n                    this.cacheUserData();\r\n                    this.setState({ loading: false });\r\n                });\r\n            })\r\n            .catch(err => {\r\n                this.setState({ errors: this.state.errors.concat(err), loading: false });\r\n            });\r\n    }\r\n\r\n    handleGoogleLogin = () => {\r\n        this.setState({ errors: [], loading: true });\r\n\r\n        firebase\r\n            .auth()\r\n            .signInWithPopup(new firebase.auth.GoogleAuthProvider())\r\n            .then((createdUser) => {\r\n                this.saveUser(createdUser).then(() => {\r\n                    this.cacheUserData();\r\n                    this.setState({ loading: false });\r\n                });\r\n            })\r\n            .catch(err => {\r\n                this.setState({ errors: this.state.errors.concat(err), loading: false });\r\n            });\r\n    }\r\n\r\n\r\n    saveUser = (createdUser) => {\r\n        return this.state.usersRef.child(createdUser.user.uid).set({\r\n            name: createdUser.user.displayName,\r\n            avatar: createdUser.user.photoURL\r\n        });\r\n    }\r\n\r\n    cacheUserData = () => {\r\n        const userList = [];\r\n\r\n        firebase.database().ref('users').once(\"value\", data => {\r\n            const users = data.val()\r\n            const userIds = Object.keys(users);\r\n\r\n            userIds.forEach(id => {\r\n                userList.push({\r\n                    userId: id,\r\n                    userData: users[id]\r\n                })\r\n            });\r\n\r\n            this.props.cacheUserData(userList);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { loading } = this.state;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Button disabled={loading} icon=\"facebook\" fluid color=\"facebook\" style={{ marginBottom: 10 }} content=\"Login with Facebook\" onClick={this.handleFacebookLogin} />\r\n                <Button disabled={loading} icon=\"google\" fluid color=\"google plus\" content=\"Login with Google\" onClick={this.handleGoogleLogin} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, { cacheUserData })(SocialLogin);","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A message can contain a content.\n */\n\nfunction MessageContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('content', className);\n  var rest = getUnhandledProps(MessageContent, props);\n  var ElementType = getElementType(MessageContent, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nMessageContent.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nMessageContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default MessageContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A message can contain a header.\n */\n\nfunction MessageHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('header', className);\n  var rest = getUnhandledProps(MessageHeader, props);\n  var ElementType = getElementType(MessageHeader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nMessageHeader.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nMessageHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nMessageHeader.create = createShorthandFactory(MessageHeader, function (val) {\n  return {\n    content: val\n  };\n});\nexport default MessageHeader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A message list can contain an item.\n */\n\nfunction MessageItem(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('content', className);\n  var rest = getUnhandledProps(MessageItem, props);\n  var ElementType = getElementType(MessageItem, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nMessageItem.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nMessageItem.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nMessageItem.defaultProps = {\n  as: 'li'\n};\nMessageItem.create = createShorthandFactory(MessageItem, function (content) {\n  return {\n    content: content\n  };\n});\nexport default MessageItem;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _map from \"lodash/map\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport MessageItem from './MessageItem';\n/**\n * A message can contain a list of items.\n */\n\nfunction MessageList(props) {\n  var children = props.children,\n      className = props.className,\n      items = props.items;\n  var classes = cx('list', className);\n  var rest = getUnhandledProps(MessageList, props);\n  var ElementType = getElementType(MessageList, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? _map(items, MessageItem.create) : children);\n}\n\nMessageList.handledProps = [\"as\", \"children\", \"className\", \"items\"];\nMessageList.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand Message.Items. */\n  items: customPropTypes.collectionShorthand\n} : {};\nMessageList.defaultProps = {\n  as: 'ul'\n};\nMessageList.create = createShorthandFactory(MessageList, function (val) {\n  return {\n    items: val\n  };\n});\nexport default MessageList;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _isNil from \"lodash/isNil\";\nimport _without from \"lodash/without\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, createHTMLParagraph, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey } from '../../lib';\nimport Icon from '../../elements/Icon';\nimport MessageContent from './MessageContent';\nimport MessageHeader from './MessageHeader';\nimport MessageList from './MessageList';\nimport MessageItem from './MessageItem';\n/**\n * A message displays information that explains nearby content.\n * @see Form\n */\n\nvar Message =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Message, _Component);\n\n  function Message() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Message);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Message)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"handleDismiss\", function (e) {\n      var onDismiss = _this.props.onDismiss;\n      if (onDismiss) onDismiss(e, _this.props);\n    });\n\n    return _this;\n  }\n\n  _createClass(Message, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          attached = _this$props.attached,\n          children = _this$props.children,\n          className = _this$props.className,\n          color = _this$props.color,\n          compact = _this$props.compact,\n          content = _this$props.content,\n          error = _this$props.error,\n          floating = _this$props.floating,\n          header = _this$props.header,\n          hidden = _this$props.hidden,\n          icon = _this$props.icon,\n          info = _this$props.info,\n          list = _this$props.list,\n          negative = _this$props.negative,\n          onDismiss = _this$props.onDismiss,\n          positive = _this$props.positive,\n          size = _this$props.size,\n          success = _this$props.success,\n          visible = _this$props.visible,\n          warning = _this$props.warning;\n      var classes = cx('ui', color, size, useKeyOnly(compact, 'compact'), useKeyOnly(error, 'error'), useKeyOnly(floating, 'floating'), useKeyOnly(hidden, 'hidden'), useKeyOnly(icon, 'icon'), useKeyOnly(info, 'info'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(success, 'success'), useKeyOnly(visible, 'visible'), useKeyOnly(warning, 'warning'), useKeyOrValueAndKey(attached, 'attached'), 'message', className);\n      var dismissIcon = onDismiss && React.createElement(Icon, {\n        name: \"close\",\n        onClick: this.handleDismiss\n      });\n      var rest = getUnhandledProps(Message, this.props);\n      var ElementType = getElementType(Message, this.props);\n\n      if (!childrenUtils.isNil(children)) {\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes\n        }), dismissIcon, children);\n      }\n\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes\n      }), dismissIcon, Icon.create(icon, {\n        autoGenerateKey: false\n      }), (!_isNil(header) || !_isNil(content) || !_isNil(list)) && React.createElement(MessageContent, null, MessageHeader.create(header, {\n        autoGenerateKey: false\n      }), MessageList.create(list, {\n        autoGenerateKey: false\n      }), createHTMLParagraph(content, {\n        autoGenerateKey: false\n      })));\n    }\n  }]);\n\n  return Message;\n}(Component);\n\n_defineProperty(Message, \"Content\", MessageContent);\n\n_defineProperty(Message, \"Header\", MessageHeader);\n\n_defineProperty(Message, \"List\", MessageList);\n\n_defineProperty(Message, \"Item\", MessageItem);\n\n_defineProperty(Message, \"handledProps\", [\"as\", \"attached\", \"children\", \"className\", \"color\", \"compact\", \"content\", \"error\", \"floating\", \"header\", \"hidden\", \"icon\", \"info\", \"list\", \"negative\", \"onDismiss\", \"positive\", \"size\", \"success\", \"visible\", \"warning\"]);\n\nexport { Message as default };\nMessage.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A message can be formatted to attach itself to other content. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['bottom', 'top'])]),\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A message can be formatted to be different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A message can only take up the width of its content. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A message may be formatted to display a negative message. Same as `negative`. */\n  error: PropTypes.bool,\n\n  /** A message can float above content that it is related to. */\n  floating: PropTypes.bool,\n\n  /** Shorthand for MessageHeader. */\n  header: customPropTypes.itemShorthand,\n\n  /** A message can be hidden. */\n  hidden: PropTypes.bool,\n\n  /** A message can contain an icon. */\n  icon: PropTypes.oneOfType([customPropTypes.itemShorthand, PropTypes.bool]),\n\n  /** A message may be formatted to display information. */\n  info: PropTypes.bool,\n\n  /** Array shorthand items for the MessageList. Mutually exclusive with children. */\n  list: customPropTypes.collectionShorthand,\n\n  /** A message may be formatted to display a negative message. Same as `error`. */\n  negative: PropTypes.bool,\n\n  /**\n   * A message that the user can choose to hide.\n   * Called when the user clicks the \"x\" icon. This also adds the \"x\" icon.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onDismiss: PropTypes.func,\n\n  /** A message may be formatted to display a positive message.  Same as `success`. */\n  positive: PropTypes.bool,\n\n  /** A message can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n\n  /** A message may be formatted to display a positive message.  Same as `positive`. */\n  success: PropTypes.bool,\n\n  /** A message can be set to visible to force itself to be shown. */\n  visible: PropTypes.bool,\n\n  /** A message may be formatted to display warning messages. */\n  warning: PropTypes.bool\n} : {};","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport firebase from \"../../firebase\";\n\nimport {\n  Grid, Segment, Button, Header, Message, Icon, Form, Divider\n} from 'semantic-ui-react';\n\nimport { connect } from 'react-redux';\n\nimport { cacheUserData } from \"./../../actions\";\nimport SocialLogin from \"./SocialLogin\";\n\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    errors: [],\n    loading: false\n  };\n\n  displayErrors = errors => errors.map((error, i) => <p key={i}>{error.message}</p>);\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (this.isFormValid(this.state)) {\n      this.setState({ errors: [], loading: true });\n\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(this.state.email, this.state.password)\n        .then(signedInuser => {\n          this.cacheUserData();\n          this.setState({ loading: false });\n        })\n        .catch(err => {\n          this.setState({ errors: this.state.errors.concat(err), loading: false });\n        });\n    }\n  }\n\n  isFormValid = ({ email, password }) => email && password;\n\n  handleInputErrpr = (errors, inputName) => {\n    return errors.some(error => error.message.toLowerCase().includes('email')) ? 'error' : '';\n  }\n\n  cacheUserData = () => {\n    const userList = [];\n\n    firebase.database().ref('users').once(\"value\", data => {\n      const users = data.val()\n      const userIds = Object.keys(users);\n\n      userIds.forEach(id => {\n        userList.push({\n          userId: id,\n          userData: users[id]\n        })\n      });\n\n      this.props.cacheUserData(userList);\n    });\n  }\n\n  // Available colors = \"red\",\"orange\",\"yellow\",\"olive\",\"green\",\"teal\",\"blue\",\"violet\",\"purple\",\"pink\",\"brown\",\"grey\",\"black\"\n  render() {\n    const { email, password, errors, loading } = this.state;\n\n    return (\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\" >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h2\" icon color=\"teal\" textAlign=\"center\">\n            <Icon name=\"user secret\" color=\"teal\"></Icon>\n            Login Secret Society\n          </Header>\n\n          <Form onSubmit={this.handleSubmit} size=\"large\">\n            <Segment stacked>\n              <Form.Input fluid className={this.handleInputErrpr(errors, 'email')} name=\"email\" icon=\"mail\" iconPosition=\"left\" placeholder=\"Email\" onChange={this.handleChange} type=\"email\" value={email} />\n              <Form.Input fluid className={this.handleInputErrpr(errors, 'password')} name=\"password\" icon=\"lock\" iconPosition=\"left\" placeholder=\"Password\" onChange={this.handleChange} type=\"password\" value={password} />\n\n              <Button disabled={loading} className={loading ? 'loading' : ''} color=\"teal\" fluid size=\"large\">Submit</Button>\n            </Segment>\n            <Divider horizontal>Or</Divider>\n            <SocialLogin />\n          </Form>\n          {errors.length > 0 && (\n            <Message error>\n              <h3>Error</h3>\n              {this.displayErrors(errors)}\n            </Message>\n          )}\n          <Message>Don't have a account?<Link to=\"/register\">Register</Link></Message>\n        </Grid.Column>\n      </Grid>\n    );\n  };\n\n}\n\nexport default connect(null, { cacheUserData })(Login);\n"],"sourceRoot":""}